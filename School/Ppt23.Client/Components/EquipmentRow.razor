@using Ppt23.Client.ViewModels
<div class="grid grid-cols-5 gap-4 p-2 px-1 py-1 @((Equi.IsRevisionNeeded) ? "bg-red-200" : "")">
    @if (!Equi.IsInEditMode)
    {
        <div class="p-2">@Equi.Name</div>
        <div class="p-2 text-center">@Equi.BoughtDateTime.ToString("yyyy-MM-dd")</div>
        <div class="p-2 text-center">@Equi.LastRevisionDateTime.ToString("yyyy-MM-dd")</div>
        <div class="p-2 text-center">@((Equi.IsRevisionNeeded) ? "Yes" : "No")</div>
        <div class="flex justify-center">
            <button class="border rounded bg-teal-500 text-white text-sm px-2" @onclick="() => OnDelete.InvokeAsync(Equi)">Delete</button>
            <button class="border rounded bg-teal-700 text-white text-sm px-2 ml-2" @onclick="() => OnPerformRevision.InvokeAsync(Equi)">Perform Revision</button>
            <button class="border rounded bg-emerald-300 text-white text-sm px-2 ml-2" @onclick="() => Equi.IsInEditMode = true">Edit</button>
        </div>
        

        
    }
    //edit mode
    else{

        <div class="p-2"><input type="text" @bind-value="Equi.Name" /></div>
        <div class="p-2 text-center"><input type="date" @bind-value="Equi.BoughtDateTime" /></div>
        <div class="p-2 text-center"><input type="date" @bind-value="Equi.LastRevisionDateTime" /></div>
        <div class="p-2 text-center">@((Equi.IsRevisionNeeded) ? "Yes" : "No")</div>
        <div class="flex justify-center">
            <button class="border rounded bg-teal-500 text-white text-sm px-2" @onclick="() => Equi.IsInEditMode = false">Ok</button>
            <button class="border rounded bg-teal-700 text-white text-sm px-2 ml-2" @onclick="() => Equi.IsInEditMode = false">Cancel</button>
        </div>


    }
    
</div>

@code {
    [Parameter] public EquipmentVm Equi { get; set; } = null!;
    [Parameter] public EventCallback<EquipmentVm> OnDelete { get; set; }
    [Parameter] public EventCallback<EquipmentVm> OnPerformRevision { get; set; }
}

